[build-system]
requires = ["setuptools >= 40.6.0", "setuptools_scm[toml] >= 4", "cython"]
build-backend = "setuptools.build_meta"

[project]
name = "ddtrace-scale"
version = "0.49.4.dev0"
description = "Datadog tracing code"
readme = "README.md"
requires-python = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
license = { text = "LICENSE.BSD3" }
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 2.7",
  "Programming Language :: Python :: 3.5",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
]
dependencies = [
  "enum34; python_version<'3.4'",
  "funcsigs>=1.0.0; python_version=='2.7'",
  "typing; python_version<'3.5'",
  "packaging>=17.1",
  "protobuf>=3",
  "tenacity>=5",
  "attrs>=19.2.0",
  "six>=1.12.0",
  "pep562; python_version<'3.7'",
]

[project.optional-dependencies]
opentracing = [
    "opentracing>=2.0.0",
]

[tool.isort]
force_single_line = true
lines_after_imports = 2
force_sort_within_sections = true
known_first_party = "ddtrace"
default_section = "THIRDPARTY"
skip = ["ddtrace/vendor/"]
line_length = 120

[tool.black]
line-length = 120
target_version = ['py27', 'py35', 'py36', 'py37', 'py38']
include = '''\.py[ix]?$'''
exclude = '''
(
  .venv*
  | \.riot/
  | ddtrace/internal/_encoding.pyx$
  | ddtrace/internal/_rand.pyx$
  | ddtrace/profiling/collector/_traceback.pyx$
  | ddtrace/profiling/collector/_threading.pyx$
  | ddtrace/profiling/collector/stack.pyx$
  | \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build/
  | buck-out/
  | build/
  | dist/
  | ddtrace/(
    contrib/
    (
      aiopg
      | boto
      | jinja2
      | pylibmc
      | rediscluster
    )
    | profiling/exporter/pprof_.*pb2.py$
    | vendor/
  )
  | tests/
  (
    contrib/
    (
      aiopg
      | config.py
      | jinja2
      | pylibmc
      | rediscluster
    )
  )
)
'''
